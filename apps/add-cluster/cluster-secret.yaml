apiVersion: v1
kind: Secret
metadata:
  name: my-cluster-secret
  namespace: argocd
  labels:
    argocd.argoproj.io/secret-type: cluster
data:
  name: bXktY2x1c3Rlci1uYW1l # Base64 encoded "my-cluster-name"
  server: aHR0cHM6Ly9rM3MtYXBpLmV4YW1wbGUuY29t # Base64 encoded "https://k3s-api.example.com"
  config:  # Base64 encoded kubeconfig
